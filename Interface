import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ToDoList {

    // Priority Interface
    public interface Priority {
        void setPriority(int priority);
        int getPriority();
    }

    // Complexity Interface
    public interface Complexity {
        void setComplexity(int complexity);
        int getComplexity();
    }

    // Task Class implementing Priority, Complexity, and Comparable
    public static class Task implements Priority, Complexity, Comparable<Task> {
        private String name;
        private int priority;
        private int complexity;

        // Constructor to initialize the Task
        public Task(String name) {
            this.name = name;
            this.priority = 0; // Default priority
            this.complexity = 0; // Default complexity
        }

        // Implementing the setPriority method from Priority interface
        @Override
        public void setPriority(int priority) {
            this.priority = priority;
        }

        // Implementing the getPriority method from Priority interface
        @Override
        public int getPriority() {
            return this.priority;
        }

        // Implementing the setComplexity method from Complexity interface
        @Override
        public void setComplexity(int complexity) {
            this.complexity = complexity;
        }

        // Implementing the getComplexity method from Complexity interface
        @Override
        public int getComplexity() {
            return this.complexity;
        }

        // Implementing the compareTo method from Comparable interface
        @Override
        public int compareTo(Task other) {
            // Compare by priority first
            if (this.priority != other.priority) {
                return Integer.compare(this.priority, other.priority);
            }
            // If priorities are the same, compare by complexity
            return Integer.compare(this.complexity, other.complexity);
        }

        // String representation of the task
        @Override
        public String toString() {
            return "Task{name='" + name + "', priority=" + priority + ", complexity=" + complexity + "}";
        }
    }

    public static void main(String[] args) {
        // Create a list of tasks
        List<Task> tasks = new ArrayList<>();

        // Instantiate some tasks
        Task task1 = new Task("Task 1");
        task1.setPriority(3);
        task1.setComplexity(2);

        Task task2 = new Task("Task 2");
        task2.setPriority(1);
        task2.setComplexity(5);

        Task task3 = new Task("Task 3");
        task3.setPriority(2);
        task3.setComplexity(1);

        Task task4 = new Task("Task 4");
        task4.setPriority(3);
        task4.setComplexity(3);

        // Add tasks to the list
        tasks.add(task1);
        tasks.add(task2);
        tasks.add(task3);
        tasks.add(task4);

        // Sort tasks based on priority first, then complexity
        Collections.sort(tasks);

        // Print the sorted tasks
        System.out.println("Sorted Tasks:");
        for (Task task : tasks) {
            System.out.println(task);
        }
    }
}
