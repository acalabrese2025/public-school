import java.util.ArrayList;

// Base class Aircraft
class Aircraft {
    String wings;

    // Constructor for Aircraft class
    public Aircraft(String wings) {
        this.wings = wings;
    }

    // Method to display the features of an aircraft
    public void displayFeatures() {
        System.out.println("This is an aircraft with " + wings + " wings.");
    }
}

// Child class SingleEnginePlane extending Aircraft
class SingleEnginePlane extends Aircraft {
    String engineType;

    // Constructor for SingleEnginePlane class
    public SingleEnginePlane(String wings, String engineType) {
        super(wings);  // Call to Aircraft's constructor
        this.engineType = engineType;
    }

    // Override method to display the features of the single-engine plane
    @Override
    public void displayFeatures() {
        System.out.println("This is a single-engine plane with " + wings + " wings and a " + engineType + " engine.");
    }
}

// Child class Helicopter extending SingleEnginePlane
class Helicopter extends SingleEnginePlane {
    String bladeType;

    // Constructor for Helicopter class
    public Helicopter(String wings, String engineType, String bladeType) {
        super(wings, engineType);  // Call to SingleEnginePlane's constructor
        this.bladeType = bladeType;
    }

    // Override method to display the features of the helicopter
    @Override
    public void displayFeatures() {
        System.out.println("This is a helicopter with " + wings + " wings, a " + engineType + " engine, and " + bladeType + " blades.");
    }
}

// Main class to test the hierarchy
public class Arcafy {
    public static void main(String[] args) {
        // Create objects of Aircraft, SingleEnginePlane, and Helicopter
        Aircraft plane = new SingleEnginePlane("fixed", "rotary");
        Aircraft helicopter = new Helicopter("rotary", "gas", "rotating helicopter");

        // Create an ArrayList to store different types of Aircraft
        ArrayList<Aircraft> aircraftList = new ArrayList<>();
        aircraftList.add(plane);
        aircraftList.add(helicopter);

        // Print features of each aircraft
        for (Aircraft aircraft : aircraftList) {
            aircraft.displayFeatures();
        }
    }
}

}
